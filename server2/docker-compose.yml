version: '3.8'

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '4512:4512'
    environment:
      - PORT=4512
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo1.shortlink.local:27017,mongo2.shortlink.local:27017,mongo3.shortlink.local:27017/url-shortener?replicaSet=rs0
      - MONGODB_REPLICA_SET=rs0
      - MONGODB_MAX_POOL_SIZE=20
      - MONGODB_CONNECT_TIMEOUT_MS=30000
      - MONGODB_SOCKET_TIMEOUT_MS=360000
      - JWT_SECRET=ваш_супер_секретный_ключ_для_jwt_в_продакшне
      - JWT_EXPIRES_IN=7d
      - BASE_URL=https://shortlink.local
      - CLIENT_URL=https://shortlink.local
      - LOG_LEVEL=info
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    volumes:
      - backend_logs:/app/logs
    networks:
      - app_network
    depends_on:
      - nginx
    extra_hosts:
      - 'mongo1.shortlink.local:192.168.100.12'
      - 'mongo2.shortlink.local:192.168.100.12'
      - 'mongo3.shortlink.local:192.168.100.12'

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - VITE_APP_NAME=КороткоСсылка
      - VITE_APP_DESCRIPTION=Профессиональный сервис для сокращения ссылок
      - VITE_API_URL=https://shortlink.local/api
      - VITE_API_TIMEOUT=30000
      - VITE_APP_PORT=443
      - VITE_APP_HOST=shortlink.local
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - app_network

  dnsmasq:
    image: jpillora/dnsmasq
    restart: unless-stopped
    ports:
      - '53:53/udp'
      - '5380:8080'
    environment:
      - HTTP_USER=admin
      - HTTP_PASS=admin
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
    cap_add:
      - NET_ADMIN
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  backend_logs:
  nginx_logs:
