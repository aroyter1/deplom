version: '3.8'

services:
  mongo1:
    image: mongo:5
    container_name: mongo1
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    ports:
      - '27017:27017'
    volumes:
      - mongo1_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - mongo_network
    restart: unless-stopped
    hostname: mongo1.shortlink.local

  mongo2:
    image: mongo:5
    container_name: mongo2
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    ports:
      - '27018:27017'
    volumes:
      - mongo2_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - mongo_network
    restart: unless-stopped
    hostname: mongo2.shortlink.local

  mongo3:
    image: mongo:5
    container_name: mongo3
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    ports:
      - '27019:27017'
    volumes:
      - mongo3_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - mongo_network
    restart: unless-stopped
    hostname: mongo3.shortlink.local

  # Сервис для инициализации репликасета MongoDB
  mongo-init:
    image: mongo:5
    restart: 'no'
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      bash -c "sleep 10 && mongosh --host mongo1:27017 --eval '
      rs.initiate({
        _id: \"rs0\",
        members: [
          {_id: 0, host: \"mongo1.shortlink.local:27017\"},
          {_id: 1, host: \"mongo2.shortlink.local:27017\"},
          {_id: 2, host: \"mongo3.shortlink.local:27017\"}
        ]
      })
      '"
    networks:
      - mongo_network

networks:
  mongo_network:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo_config:
