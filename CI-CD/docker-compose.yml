version: '3.8'

services:
  # NGINX балансировщик
  nginx:
    build:
      context: ..
      dockerfile: CI-CD/docker/nginx/Dockerfile
    restart: always
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - frontend
      - backend
    networks:
      - web
    volumes:
      - nginx-logs:/var/log/nginx
      - nginx-certs:/etc/nginx/ssl
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Frontend сервисы
  frontend:
    build:
      context: ..
      dockerfile: CI-CD/docker/frontend/Dockerfile
      args:
        - VITE_API_URL=http://localhost:3000
        - VITE_APP_TITLE=КороткоСсылка
    restart: always
    networks:
      - web
    depends_on:
      - backend
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Backend сервисы
  backend:
    build:
      context: ..
      dockerfile: CI-CD/docker/backend/Dockerfile
      args:
        - JWT_SECRET=yourSecretKey
        - MONGODB_URI=mongodb://admin:password@mongodb:27017/url-shortener?authSource=admin
        - BASE_URL=http://localhost
    restart: always
    networks:
      - web
      - db
    depends_on:
      - mongodb
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # MongoDB база данных
  mongodb:
    build:
      context: ..
      dockerfile: CI-CD/docker/mongodb/Dockerfile
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=url-shortener
    volumes:
      - mongodb-data:/data/db
    networks:
      - db
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Бэкап базы данных
  backup:
    build:
      context: ..
      dockerfile: CI-CD/docker/backup/Dockerfile
    restart: always
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USER=admin
      - MONGO_PASSWORD=password
      - MONGO_DATABASE=url-shortener
      - BACKUP_RETENTION_HOURLY=24
      - BACKUP_RETENTION_DAILY=7
      - BACKUP_RETENTION_WEEKLY=4
    volumes:
      - mongodb-backup:/backup
    networks:
      - db
    depends_on:
      - mongodb

  # Grafana для мониторинга
  grafana:
    build:
      context: ..
      dockerfile: CI-CD/docker/grafana/Dockerfile
    restart: always
    ports:
      - '3030:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Prometheus для сбора метрик
  prometheus:
    build:
      context: ..
      dockerfile: CI-CD/docker/prometheus/Dockerfile
    restart: always
    ports:
      - '9090:9090'
    volumes:
      - prometheus-data:/prometheus
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Node Exporter для мониторинга хоста
  node-exporter:
    image: prom/node-exporter:latest
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  # cAdvisor для мониторинга контейнеров
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  # MongoDB Exporter для мониторинга MongoDB
  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    restart: always
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/admin?serverSelectionTimeoutMS=2000
    networks:
      - monitoring
      - db
    depends_on:
      - mongodb
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

networks:
  web:
    driver: bridge
  db:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  nginx-logs:
  nginx-certs:
  mongodb-data:
  mongodb-backup:
  grafana-data:
  prometheus-data:
