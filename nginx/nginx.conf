user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # Настройка кэширования
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

    # Настройка сжатия
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream для балансировки бэкенда
    upstream backend_servers {
        # Динамические имена создаются Docker Compose при масштабировании
        server backend:4512;
        # При добавлении экземпляров с помощью docker-compose up -d --scale backend=3
        # Docker автоматически создаст сервисы backend_1, backend_2, backend_3
    }

    # Сервер для бэкенда API
    server {
        listen 80;
        server_name api.korotko.ru;

        location / {
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache STATIC;
            proxy_cache_valid 200 1d;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        }
    }

    # Сервер для фронтенда
    server {
        listen 80;
        server_name korotko.ru www.korotko.ru;

        root /usr/share/nginx/html;
        index index.html index.htm;

        # Кэширование статических файлов
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        # Проксирование API запросов на бэкенд
        location /api/ {
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}